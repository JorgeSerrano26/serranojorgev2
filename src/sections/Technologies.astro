---
import TechnologiesData from "@/data/technologies.json";

interface Props {
    duration?: number;
    id: string;
    left?: boolean;
    from: number;
    to: number;
}

const technologies = await TechnologiesData.slice(
    Astro.props.from,
    Astro.props.to === -1 ? TechnologiesData.length + 1 : Astro.props.to,
);

const { id } = Astro.props as Props;
---

<article id={id} class="scroller overflow-hidden">
    <section
        style={`--duration: ${Astro.props.duration}s; --animation-name: ${Astro.props.left ? "scroll_left" : "scroll_right"}` as string}
    >
        {
            technologies.map(({ name }) => (
                <span aria-label={name} class="whitespace-nowrap">
                    {name}
                </span>
            ))
        }
    </section>
</article>

<style>
    article.scroller {
        border: 2px solid transparent;
        mask-image: linear-gradient(
            to right,
            transparent 0%,
            white 30%,
            white 70%,
            transparent 100%
        );
    }

    article.scroller section {
        display: flex;
        gap: 16px;
        animation: var(--animation-name) var(--duration) linear infinite;
        padding: 0 8px;
    }

    article.scroller section:hover {
        animation-play-state: paused;
    }

    article.scroller span {
        color: #bfbfbf;
        padding: 6px 22px;
        border-radius: 50px;
        background: #0e0e11;
        border: 1px solid #323232;
        display: inline-block;
        transition: all 0.3s;
    }

    article.scroller span:hover {
        background: rgba(255, 255, 255, 0.2);
    }

    @keyframes scroll_left {
        to {
            transform: translateX(-50%);
        }
    }

    @keyframes scroll_right {
        from {
            transform: translateX(-50%);
        }
        to {
            transform: translateX(0%);
        }
    }
</style>
